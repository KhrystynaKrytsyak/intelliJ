Collections framework:
Collections framework is just a collection of interface and classes that
have many methods to store and manipulate
real life day to day data.

 Why we should learn Collections framework:
  --> Collections framework contains the classes that have pre-built methods to store
  and manipulate the data. These methods are battle tested. (very well tested something
   we can use in production environment).


 How can we use the collections framework:
 ---> They are same classes just like any other class in Java. We create the
 object of the class and start calling the methods we just need to take care
 of the diamond operator.
 We put the name of the class inside the diamond operator <> whos objects we
 will be storing inside these classes for example for Strings and Arraylist
 the syntax is ArrayList<String> objName = new ArrayList<>();


What are wrapper classes:
---> They are special classes built to work with collections framework
which are replica of primitive data types but they are classes means
we can use them just like any other class we can have methods.

Boxing and unboxing in wrapper classes:
-->When we convert a primitive data type like int to a non-primitive
wrapper class like Integer we call it boxing. This conversion can happen
automatically, and we can also call explicit methods to convert primitive
to non-primitive

---> In the case of auto its called auto boxing and in the autoboxing we just
assign the data, and it is converted automatically while in simple we need
to call a method to convert it. Unboxing and auto-unboxing is simple the reverse of it.


 Some Downsides not that down:
 1. We need to use wrapper classes with collections framework;
 2. int num vs integer num Wrapper classes occupy 4 times more
 memory as compared to primitives. But as tester we don't need to
 worry too much about these wrapper classes.
================================================================================================================================================================================

List is the first interface that we will be discussing from the collections framework:
List:
- we can store duplicate data
- insertion order is maintained

ArrayList:
-LinkedList Class

Difference between ArrayList vs LinkedList
    ArrayList:
Upside -> Retrieval (get operation) of elements is super fast
Downside -> Adding elements in the middle or start will be very expensive \

    LinkedList:
Upside-> whenever we have to insert the data randomly not at the last index we should be using linkedList
Downside -> retrieval is super, super slow is the list is big